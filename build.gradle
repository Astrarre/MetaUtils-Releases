plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id "maven-publish"
    id "com.jfrog.bintray" version "1.8.5"
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.3.70'
}

group 'io.github.febb'
version metautils_version + "+build." + file("build.txt").text
archivesBaseName = "metautils"

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.ow2.asm:asm:8.0.1")
    implementation 'org.ow2.asm:asm-tree:8.0.1'
    implementation 'org.ow2.asm:asm-util:8.0.1'
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation 'com.squareup:javapoet:1.12.1'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0" // JVM dependency
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName

            from project.components.java

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Metaprogramming Utilities')
                root.appendNode('name', 'MetaUtils')
                root.appendNode('url', "https://github.com/IntransientMC/MetaUtils-Releases")
            }
        }


    }
}
java {
    withSourcesJar()
}

task bumpBuildNumber {
    doLast {
        file("build.txt") .write((file("build.txt").text.toInteger()  + 1).toString())
    }
}

tasks.bintrayUpload.dependsOn(bumpBuildNumber)

bintray {
    user = project.hasProperty('bintray_user') ? project.property('bintray_user') : ""
    key = project.hasProperty('bintray_api_key') ? project.property('bintray_api_key') : ""
    publications = ["mavenJava"]
    publish = true //[Default: false] Whether version should be auto published after an upload
    pkg {
        repo = "maven"
        userOrg = "febb"
        name = "MetaUtils"
        licenses = ["mit"]
        version {
            name = metautils_version
            released = new Date()
        }
    }

}